=Paperclip

This is a fork of thoughbot's paperclip

This fork adds the possibility to process the uploaded file later.

if :process_later option is turn on, processed_at column won't be set on file upload.

Then, files can be processed later on via a rake task (see example in Quick Start).


==Quick Start

In your model:

  class Resume < ActiveRecord::Base
    has_attached_file :paper  , :styles => { :text => { :format => "txt" } },
                              :process_later => true,
                              :processors => [ :pdf2txt, :to_utf8 ]

    validates_attachment_content_type :paper, :content_type => [ 'application/pdf']
  end

In your migrations:

  class AddAttachmentsPaperToResume < ActiveRecord::Migration
    def self.up
      add_column :resumes, :paper_file_name, :string
      add_column :resumes, :paper_content_type, :string
      add_column :resumes, :paper_file_size, :integer
      add_column :resumes, :paper_updated_at, :datetime
      add_column :resumes, :paper_processed_at, :datetime
    end

    def self.down
      remove_column :resumes, :paper_file_name
      remove_column :resumes, :paper_content_type
      remove_column :resumes, :paper_file_size
      remove_column :resumes, :paper_updated_at
      remove_column :resumes, :paper_processed_at
    end
  end

In your edit and new views:

  <% form_for :resume, :url => { :controller => "resumes", :action => "create"}, :html => { :multipart => true } do |form| %>

    <%= error_messages_for :resume %>

    <p>
      <%= form.label :paper, "File" %>
      <%= form.file_field :paper %>
    </p>
    <p>
      <%= form.submit %>
    </p>
  <% end %>

In your controller:

  def create
    @resume = Resume.create( params[:user] )
  end

Rake task (lib/tasks/resume.rake)

namespace :resume do

  desc "process resumes"
  task :process => :environment do
    resumes = Resume.find(:all, :conditions => "paper_processed_at IS NULL")
    for resume in resumes
      puts "[#{resume.paper_content_type}] #{resume.paper_file_name}"
      if resume.paper.reprocess!
        resume.save
      end
    end
  end

end


